{"version":3,"sources":["components/nav/menuItem/MenuItem.js","components/nav/NavBar.js","api/api-access.js","api/api-routes.js","redux/books/books.js","components/book/Book.js","components/booksContainer/BooksContainer.js","utils/idGenerator.js","components/createNewBook/CreateNewBook.js","pages/home/Home.js","pages/categories/Categories.js","pages/NotMatch.js","App.js","redux/configureStore.js","index.js"],"names":["colors","MenuItem","index","to","text","style","border","exact","type","className","NavBar","linkCollection","id","path","map","link","access","requestApi","url","params","method","newUrl","headersList","Accept","options","URLSearchParams","toString","item_id","fetch","getApi","callback","a","response","ok","undefined","json","postApi","body","JSON","stringify","headers","deleteApi","routes","MAIN","ADD_BOOK","REMOVE_BOOK","initialState","addBook","payload","reducer","state","action","filter","book","Book","props","dispatch","useDispatch","title","category","onClick","deleteBookFromApi","BooksContainer","books","useSelector","booksReducer","useEffect","Object","entries","forEach","newBook","booksCollection","ID","Math","random","substr","CreateNewBook","titleInput","useRef","categoryInput","submitBookToStore","current","value","postBookToApi","onSubmit","event","preventDefault","ref","name","placeholder","label","Home","Categories","NotMatch","App","location","useLocation","pathname","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.26737f3e.chunk.js","sourcesContent":["/* eslint-disable react/prop-types */\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst colors = ['#FF008C', '#D309E1', '#9C1AFF', '#7700FF', '#4400FF'];\n\nconst MenuItem = ({\n  index, to, text,\n}) => {\n  const style = { border: `2px solid ${colors[index]}` };\n  return (\n    <li\n      key={index}\n    >\n      <NavLink\n        to={to}\n        exact\n      >\n        <button\n          type=\"button\"\n          className=\"btn\"\n          style={style}\n        >\n          {text}\n        </button>\n      </NavLink>\n    </li>\n  );\n};\n\nexport default MenuItem;\n","import React from 'react';\nimport MenuItem from './menuItem/MenuItem';\n\nconst NavBar = () => {\n  const links = [\n    {\n      id: 1,\n      path: '/',\n      text: 'Books',\n    },\n    {\n      id: 2,\n      path: '/categories',\n      text: 'Categories',\n    },\n  ];\n\n  const createLinks = (linkCollection) => linkCollection.map((link) => (\n    <MenuItem\n      key={link.id}\n      index={link.id}\n      to={link.path}\n      text={link.text}\n    />\n  ));\n\n  return (\n    <nav className=\"nav\">\n      <div className=\"logo\"><h1>Bookstore</h1></div>\n      <ul>\n        {createLinks(links)}\n      </ul>\n    </nav>\n  );\n};\n\nexport { NavBar as default };\n","/* eslint-disable quote-props */\n/* eslint-disable quotes */\n/* eslint-disable camelcase */\nclass ApiAccess {\n  requestApi = (url, params = {}, method = 'GET') => {\n    let newUrl = url;\n    const headersList = {\n      Accept: '*/*',\n      'Content-Type': 'application/json',\n    };\n\n    const options = {\n      method,\n      headersList,\n    };\n    if (method === 'GET') {\n      newUrl += `?${(new URLSearchParams(params)).toString()}`;\n    } else if (method === 'DELETE') {\n      newUrl += `/${params.item_id}`;\n    }\n\n    return fetch(newUrl, options);\n  };\n\n  getApi = async (url, params, callback) => {\n    const response = await this.requestApi(url, params, 'GET');\n    if (response.ok) {\n      if (callback !== undefined) {\n        callback();\n      }\n      return response.json();\n    }\n    return '';\n  };\n\n  postApi = async (url, params = {}) => {\n    const headersList = {\n      Accept: '*/*',\n      'Content-Type': 'application/json',\n    };\n\n    const body = params;\n\n    const response = await fetch(url, {\n      method: 'POST',\n      body: JSON.stringify(body),\n      headers: headersList,\n    });\n    return response;\n  }\n\n  deleteApi = async (url, params) => {\n    const response = await this.requestApi(url, params, 'DELETE');\n    return response;\n  }\n}\n\nconst access = new ApiAccess();\nexport { access, ApiAccess };\n","class ApiRoutes {\n  MAIN ='https://us-central1-bookstore-api-e63c8.cloudfunctions.net/bookstoreApi/apps/OMlwiHaSBLEL62sFo84R/books';\n}\n\nconst routes = new ApiRoutes();\nexport { routes as default };\n","/* eslint-disable camelcase */\nimport { access } from '../../api/api-access';\nimport routes from '../../api/api-routes';\n\nconst ADD_BOOK = 'bookStore/books/ADD_BOOK';\nconst REMOVE_BOOK = 'bookStore/books/REMOVE_BOOK';\n\nconst initialState = [];\n\nexport const addBook = (payload) => ({\n  type: ADD_BOOK,\n  payload,\n});\n\nexport const removeBook = (payload) => ({\n  type: REMOVE_BOOK,\n  payload,\n});\n\nconst errorHandle = () => {\n\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_BOOK:\n      return [...state, action.payload];\n\n    case REMOVE_BOOK:\n      return state.filter((book) => book.item_id !== action.payload);\n\n    default:\n      return state;\n  }\n};\n\nexport const getBooksFromApi = () => async (dispatch) => {\n  try {\n    const response = await access.getApi(routes.MAIN);\n    Object.entries(response).forEach((book) => {\n      const { category, title } = book[1][0];\n      const newBook = {\n        item_id: book[0],\n        title,\n        category,\n      };\n      dispatch(addBook(newBook));\n    });\n  } catch (error) {\n    dispatch(errorHandle(error));\n  }\n\n  return 'done';\n};\n\nexport const postBookToApi = ({ item_id, category, title }) => async (dispatch) => {\n  const response = await access.postApi(routes.MAIN, { item_id, category, title });\n  if (response.ok) {\n    dispatch(addBook({ item_id, category, title }));\n  }\n};\n\nexport const deleteBookFromApi = ({ id }) => async (dispatch) => {\n  const response = await access.deleteApi(routes.MAIN, { item_id: id });\n  if (response.ok) {\n    dispatch(removeBook(id));\n  }\n};\n\nexport default reducer;\n","/* eslint-disable react/prop-types */\nimport { useDispatch } from 'react-redux';\nimport React from 'react';\nimport { deleteBookFromApi } from '../../redux/books/books';\n\nconst Book = (props) => {\n  const dispatch = useDispatch();\n  const { id, title, category } = props;\n  const handleRemove = () => {\n    dispatch(deleteBookFromApi({ id }));\n  };\n\n  return (\n    <div>\n      <p>\n        I am a book, my title is:\n        {' '}\n        {title}\n      </p>\n      <p>\n        And my category is:\n        {' '}\n        {category}\n      </p>\n      <button onClick={handleRemove} type=\"button\">Remove me</button>\n    </div>\n  );\n};\nexport default Book;\n","/* eslint-disable arrow-body-style */\n/* eslint-disable no-unused-vars */\nimport { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getBooksFromApi } from '../../redux/books/books';\nimport Book from '../book/Book';\n\nconst BooksContainer = () => {\n  const books = useSelector((state) => state.booksReducer);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getBooksFromApi());\n  }, []);\n\n  const createBooks = (booksCollection) => booksCollection.map((book) => {\n    return (\n      <Book\n        key={book.item_id}\n        id={book.item_id}\n        category={book.category}\n        title={book.title}\n      />\n    );\n  });\n\n  return (\n    <section>\n      <ul>\n        {createBooks(books)}\n      </ul>\n    </section>\n  );\n};\n\nexport default BooksContainer;\n","// Generate unique IDs for use as pseudo-private/protected names.\n// Similar in concept to\n// <http://wiki.ecmascript.org/doku.php?id=strawman:names>.\n//\n// The goals of this function are twofold:\n//\n// * Provide a way to generate a string guaranteed to be unique when compared\n//   to other strings generated by this function.\n// * Make the string complex enough that it is highly unlikely to be\n//   accidentally duplicated by hand (this is key if you're using `ID`\n//   as a private/protected name on an object).\n//\n// Use:\n//\n//     var privateName = ID();\n//     var o = { 'public': 'foo' };\n//     o[privateName] = 'bar';\nexport const ID = () => (`_${Math.random().toString(36).substr(2, 9)}`);\n\nexport default ID;\n","import { useDispatch } from 'react-redux';\nimport { useRef } from 'react';\nimport { postBookToApi } from '../../redux/books/books';\nimport { ID } from '../../utils/idGenerator';\n\nconst CreateNewBook = () => {\n  const dispatch = useDispatch();\n  const titleInput = useRef(null);\n  const categoryInput = useRef(null);\n\n  const submitBookToStore = () => {\n    const newBook = {\n      item_id: ID(),\n      title: titleInput?.current?.value,\n      category: categoryInput?.current?.value,\n    };\n    dispatch(postBookToApi(newBook));\n  };\n\n  const clearInputs = () => {\n    titleInput.current.value = '';\n    categoryInput.current.value = '';\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    submitBookToStore();\n    clearInputs();\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input ref={titleInput} type=\"text\" name=\"title\" placeholder=\"Title\" />\n      <input ref={categoryInput} type=\"text\" name=\"category\" placeholder=\"Category\" />\n      <input label=\"Create\" type=\"submit\" name=\"create\" value=\"Create\" />\n    </form>\n  );\n};\n\nexport default CreateNewBook;\n","import React from 'react';\nimport BooksContainer from '../../components/booksContainer/BooksContainer';\nimport CreateNewBook from '../../components/createNewBook/CreateNewBook';\n\nconst Home = () => (\n  <>\n    <CreateNewBook />\n    <BooksContainer />\n  </>\n);\nexport default Home;\n","import React from 'react';\n\nconst Categories = () => (\n  <div>\n    UNDER CONSTRUCTION!\n  </div>\n);\nexport default Categories;\n","import React from 'react';\n\nconst NotMatch = () => (\n  <div>\n    <h3>\n      No match for this page\n    </h3>\n  </div>\n);\nexport default NotMatch;\n","import {\n  Route,\n  Switch,\n  useLocation,\n} from 'react-router-dom';\nimport NavBar from './components/nav/NavBar';\nimport Home from './pages/home/Home';\nimport Categories from './pages/categories/Categories';\nimport NotMatch from './pages/NotMatch';\n\nfunction App() {\n  const location = useLocation();\n  return (\n    <div className=\"App\">\n      <NavBar />\n      <Switch location={location} key={location.pathname}>\n        <Route exact path=\"/\">\n          <Home />\n        </Route>\n        <Route path=\"/categories\">\n          <Categories />\n        </Route>\n        <Route path=\"*\">\n          <NotMatch />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","/* eslint-disable no-unused-vars */\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\nimport booksReducer from './books/books';\n\nconst reducer = combineReducers({\n  booksReducer,\n});\n\nconst store = createStore(\n  reducer,\n  applyMiddleware(thunk),\n);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport App from './App';\nimport store from './redux/configureStore';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router basename={process.env.PUBLIC_URL}>\n        <App />\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}